imi_zl, "graphic overview of the ZL object";
imi_sprintf, "format a message of words and numbers";
zlhelp, "overview of the ZL object";
thelistpackage, "list package";
ллллллллллллллллллллллл,"";
coll, "store and edit a collection of different messages";
coll_tools, "the iter object vs the group object";
ллллллллллллллллллллллл,"";
jit.cellblock, "two-dimensional storage and viewing";
coll2cellblock, "copy a coll into a cellblock";
cellblock2csv, "copy a cellblock into a csv file";
ллллллллллллллллллллллл,"";
lh.bag, "store a collection of messages";
lh.collstore, "save and load multiple [coll]s into one";
lh.cycle, "send lists to individual outlets";
lh.delace, "separates a list item by item";
lh.lace, "multiple input [print] object";
lh.lookup, "output specified elements from a list";
lh.lsub, "list processor like [zl sub] which reports all matches";
lh.pre, "mulitple destination prepender";
lh.rotate, "list rotation without looping";
lh.slice, "slice a list into uneven parts";
lh.slicerep, "slice a list into even parts";
ллллллллллллллллллллллл,"";
dot.reg, "Like "zl reg" but right outlet bangs when empty";
dot.listinterpolate, "interpolates/extrapolates between two lists of equal length";
dot.listinterpolate4, "interpolates/extrapolates between four lists of equal length";
dot.squeuedlim, "limits the speed of messages passing through for list";
zsa.dist, "find the closest list";
ллллллллллллллллллллллл,"";
f0.l==, "outputs 1 if two lists match";
f0.s==, "outputs 1 if two symbols match";
f0.lchange, "filter out repeated lists";
f0.list_all_zero, "outputs 1 if all numbers in a list are 0";
f0.list_arpeggio, "iterates over a list with a delay";
f0.list_collect, "builds a list of incoming messages";
f0.list_first_nonzero, "output index of first non-zero item in list";
f0.list_num_nonzero, "count number of non-zero items in a list";

